} else {
mdma[i] <- 5
next
}
}
mdma <- factor(mdma, labels = c("Pure MDMA", "More MDMA", "Less MDMA",
mdma
ecstasy <- read.csv("ecstasy.csv", stringsAsFactors = FALSE)
View(ecstasy)
ecstasy$composition <- gsub(" $","", ecstasy$composition, perl = TRUE)
ecstasy$location <- gsub("\n", "", ecstasy$location)
ecstasy$proportion <- as.numeric(ecstasy$proportion)
View(ecstasy)
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
next
}
## calculate MDMA as percentage of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
##
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5
next
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3
## pure mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1
} else {
mdma[i] <- 5
next
}
}
mdma
View(ecstasy)
ecstasy[649,]
mdma
mdma <- vector()
id.vec <- unique(ecstasy$id)
id.vec
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
next
}
## calculate MDMA as percentage of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3
## pure mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1
} else {
mdma[i] <- 5
}
}
mdma
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
next
}
## calculate MDMA as percentage of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3
## pure mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1
} else {
mdma[i] <- 5
}
}
mdma
ecstasy$proportion
mdma
ecstasy$proportion
mdma
getwd()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
ecstasy <- read.csv("ecstasy.csv")
View(ecstasy)
ecstasy <- read.csv("ecstasy.csv", row.names = TRUE)
ecstasy <- create.ecstasy.df(1999:2014)
write.csv(ecstasy, "ecstasy.csv", row.names = FALSE)
View(ecstasy)
sapply(ecstasy, class)
ecstasyTest <- read.csv(ecstasy)
ecstasyTest <- read.csv("ecstasy.csv")
View(ecstasy)
ecstasy <- read.csv("ecstasy.csv")
## remove trailing whitespaces
ecstasy$composition <- gsub(" $","", ecstasy$composition, perl = TRUE)
ecstasy$location <- gsub("\n", "", ecstasy$location)
## this coerces all non-numeric characters to NA
ecstasy$proportion <- as.numeric(ecstasy$proportion)
## create categorical variable for mdma proportion in pill
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
next
}
## calculate MDMA as percentage of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
##
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5
next
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3
## pure mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1
} else {
mdma[i] <- 5
next
}
}
mdma <- factor(mdma, labels = c("Pure MDMA", "More MDMA", "Less MDMA",
"No MDMA", "Unknown"))
mdma.df <- data.frame(id = unique(ecstasy$id),
mdma = mdma,
year = ecstasy[!duplicated(ecstasy$id), "year"])
mdma
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
next
}
## calculate MDMA as percentage of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
##
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3
## pure mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1
} else {
mdma[i] <- 5
}
}
mdma
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
} else {
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5 ## unknown
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2 ## more mdma
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3 ## less mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1 ## pure mdma
} else {
mdma[i] <- 5 ## unknown
}
}
}
mdma
pill <- ecstasy[ecstasy$id == 88, c("composition", "proportion")]
pill
View(ecstasy)
ecstasy <- create.ecstasy.df(1999:2014)
View(ecstasy)
write.csv(ecstasy, "ecstasy.csv", row.names = FALSE)
ecstasy <- read.csv("ecstasy.csv")
View(ecstasy)
ecstasyTest <- read.csv("ecstasy.csv")
ecstasy$composition <- gsub(" $","", ecstasy$composition, perl = TRUE)
ecstasy$location <- gsub("\n", "", ecstasy$location)
## this coerces all non-numeric characters to NA
ecstasy$proportion <- as.numeric(ecstasy$proportion)
View(ecstasy)
ecstasy <- ecstasyTest
as.numeric(ecstasy$proportion)
ecstasy$proportion
class(ecstasy$proportion)
ecstasy$composition <- gsub(" $","", ecstasy$composition, perl = TRUE)
ecstasy$location <- gsub("\n", "", ecstasy$location)
## this coerces all non-numeric characters to NA
ecstasy$proportion <- as.numeric(as.character(ecstasy$proportion))
View(ecstasy)
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
} else {
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5 ## unknown
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2 ## more mdma
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3 ## less mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1 ## pure mdma
} else {
mdma[i] <- 5 ## unknown
}
}
}
mdma
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
} else {
## calculate MDMA as percent of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5 ## unknown
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2 ## more mdma
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3 ## less mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1 ## pure mdma
} else {
mdma[i] <- 5 ## unknown
}
}
}
mdma
mdma <- factor(mdma, labels = c("Pure MDMA", "More MDMA", "Less MDMA",
"No MDMA", "Unknown"))
mdma.df <- data.frame(id = unique(ecstasy$id),
mdma = mdma,
year = ecstasy[!duplicated(ecstasy$id), "year"])
unique(ecstasy$id)
mdma
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
next
} else {
## calculate MDMA as percent of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(mdma.prop)
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5 ## unknown
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2 ## more mdma
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3 ## less mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1 ## pure mdma
} else {
mdma[i] <- 5 ## unknown
}
}
}
mdma
id.vec
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in id.vec) {
## subset by pill id
pill <- ecstasy[ecstasy$id == i, c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
} else {
## calculate MDMA as percent of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(paste(i, mdma.prop))
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5 ## unknown
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2 ## more mdma
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3 ## less mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1 ## pure mdma
} else {
mdma[i] <- 5 ## unknown
}
}
}
unique(ecstasy$id)
View(ecstasy)
mdma <- vector()
id.vec <- unique(ecstasy$id)
for (i in 1:length(id.vec)) {
## subset by pill id
pill <- ecstasy[ecstasy$id == id.vec[i], c("composition", "proportion")]
## No MDMA
if (!("MDMA" %in% pill$composition)) {
mdma[i] <- 4 # No MDMA
} else {
## calculate MDMA as percent of total composition
mdma.prop <- pill[pill$composition == "MDMA", "proportion"] / sum(pill$proportion)
print(paste(i, mdma.prop))
if (is.nan(mdma.prop) | is.na(mdma.prop)) {
mdma[i] <- 5 ## unknown
} else if (mdma.prop > 0.5 & mdma.prop < 1) {
mdma[i] <- 2 ## more mdma
} else if (mdma.prop <= 0.5 & mdma.prop > 0) {
mdma[i] <- 3 ## less mdma
} else if (mdma.prop == 1) {
mdma[i] <- 1 ## pure mdma
} else {
mdma[i] <- 5 ## unknown
}
}
}
mdma
mdma <- factor(mdma, labels = c("Pure MDMA", "More MDMA", "Less MDMA",
"No MDMA", "Unknown"))
mdma.df <- data.frame(id = unique(ecstasy$id),
mdma = mdma,
year = ecstasy[!duplicated(ecstasy$id), "year"])
slidify("index.Rmd")
getwd()
setwd("~/GitHub/ecstasy/ecstasy-presentation/")
slidify("index.Rmd")
setwd("~/GitHub/ecstasy")
ecstasy
dir.create("data")
suppressWarnings(dir.create("data"))
suppressWarnings(dir.create("data"))
mdmaPlot <- read.csv("data/mdma_prop.csv")
View(mdmaPlot)
ggplot(mdmaPlot, aes(year, proportion)) +
geom_area(aes(col = mdma, fill = mdma), position = "stack") +
scale_fill-brewer(type = "div", palette = 1) +
theme_classic()
ggplot(mdmaPlot, aes(year, proportion)) +
geom_area(aes(col = mdma, fill = mdma), position = "stack") +
scale_fill_brewer(type = "div", palette = 1) +
theme_classic()
dir.create("plots")
png("plots/stackedAreaPlot.png")
ggplot(mdmaPlot, aes(year, proportion)) +
geom_area(aes(col = mdma, fill = mdma), position = "stack") +
scale_fill_brewer(type = "div", palette = 1) +
theme_classic()
dev.off()
dev.off()
nPlot(proportion~year, group = "mdma",
data = mdmaPlot, type = "stackedAreaChart")
mdmaPlotSubset <- subset(as.data.frame(mdmaPlot), !(mdma == "Unknown"))
nPlot(proportion~year, group = "mdma",
data = mdmaPlotSubset, type = "stackedAreaChart")
n1$print("stackedAreaNVD3.js")
n1 <- nPlot(proportion~year, group = "mdma",
data = mdmaPlotSubset, type = "stackedAreaChart")
n1$print("stackedAreaNVD3.js")
n1$print
slidify("index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
pkgs <- c("slidify", "slidifyLibraries", "rCharts")
devtools::install_github(pkgs, "ramnathv", ref = "dev")
slidify("ecstasy-presentation/index.Rmd")
library(knitr)
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
library(knitr)
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
n1$show("inline")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
slidify("ecstasy-presentation/index.Rmd")
publish_github("fryandata")
slidify("ecstasy-presentation/index.Rmd")
publish_github("ecstasy-presentation/index.html")
publish_github("ecstasy-presentation")
publish(user = "fryandata", repo = "ecstasy-presentation")
publish(user = "fryandata", repo = "ecstasy-presentation")
setwd("~/GitHub/ecstasy/ecstasy-presentation/")
setwd("~/GitHub/ecstasy/ecstasy-presentation/")
setwd("~/GitHub/ecstasy/ecstasy-presentation/")
setwd("~/GitHub/ecstasy/ecstasy-presentation/)
setwd("~/GitHub/ecstasy/ecstasy-presentation")
publish(user = "fryandata", repo = "ecstasy-presentation")
slidify("index.Rmd")
publish(user = "fryandata", repo = "ecstasy-presentation")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
